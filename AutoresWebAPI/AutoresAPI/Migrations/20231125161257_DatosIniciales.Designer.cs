// <auto-generated />
using AutoresAPI;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AutoresAPI.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20231125161257_DatosIniciales")]
    partial class DatosIniciales
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AutoresAPI.Entidades.Autor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(120)
                        .HasColumnType("nvarchar(120)");

                    b.HasKey("Id");

                    b.ToTable("Autores");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nombre = "Lewis Carroll"
                        },
                        new
                        {
                            Id = 2,
                            Nombre = "Fyodor Dostoevsky"
                        },
                        new
                        {
                            Id = 3,
                            Nombre = "William Shakespeare"
                        },
                        new
                        {
                            Id = 4,
                            Nombre = "Herman Melville"
                        },
                        new
                        {
                            Id = 5,
                            Nombre = "Dante Alighieri"
                        },
                        new
                        {
                            Id = 6,
                            Nombre = "Miguel De Cervantes"
                        },
                        new
                        {
                            Id = 7,
                            Nombre = "Gabriel García Márquez"
                        });
                });

            modelBuilder.Entity("AutoresAPI.Entidades.AutorLibro", b =>
                {
                    b.Property<int>("AutorId")
                        .HasColumnType("int");

                    b.Property<int>("LibroId")
                        .HasColumnType("int");

                    b.Property<int>("Orden")
                        .HasColumnType("int");

                    b.HasKey("AutorId", "LibroId");

                    b.HasIndex("LibroId");

                    b.ToTable("AutoresLibros");
                });

            modelBuilder.Entity("AutoresAPI.Entidades.Comentario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Contenido")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("LibroId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("LibroId");

                    b.ToTable("Comentarios");
                });

            modelBuilder.Entity("AutoresAPI.Entidades.Libro", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("Id");

                    b.ToTable("Libros");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Titulo = "Alice’s Adventures In Wonderland"
                        },
                        new
                        {
                            Id = 2,
                            Titulo = "Crime And Punishment"
                        },
                        new
                        {
                            Id = 3,
                            Titulo = "Hamlet"
                        },
                        new
                        {
                            Id = 4,
                            Titulo = "Moby Dick"
                        },
                        new
                        {
                            Id = 5,
                            Titulo = "The Divine Comedy"
                        },
                        new
                        {
                            Id = 6,
                            Titulo = "Don Quixote"
                        },
                        new
                        {
                            Id = 7,
                            Titulo = "One Hundred Years Of Solitude"
                        });
                });

            modelBuilder.Entity("AutoresAPI.Entidades.AutorLibro", b =>
                {
                    b.HasOne("AutoresAPI.Entidades.Autor", "Autor")
                        .WithMany("AutoresLibros")
                        .HasForeignKey("AutorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AutoresAPI.Entidades.Libro", "Libro")
                        .WithMany("AutoresLibros")
                        .HasForeignKey("LibroId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Autor");

                    b.Navigation("Libro");
                });

            modelBuilder.Entity("AutoresAPI.Entidades.Comentario", b =>
                {
                    b.HasOne("AutoresAPI.Entidades.Libro", "Libro")
                        .WithMany("Comentarios")
                        .HasForeignKey("LibroId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Libro");
                });

            modelBuilder.Entity("AutoresAPI.Entidades.Autor", b =>
                {
                    b.Navigation("AutoresLibros");
                });

            modelBuilder.Entity("AutoresAPI.Entidades.Libro", b =>
                {
                    b.Navigation("AutoresLibros");

                    b.Navigation("Comentarios");
                });
#pragma warning restore 612, 618
        }
    }
}
